const Database = require('better-sqlite3');

console.log('üìä V√©rification finale du sch√©ma de la base de donn√©es...');

try {
    const db = new Database('./data/emails.db');
    
    // Structure de la table emails
    console.log('\n=== Structure de la table emails ===');
    const emailsInfo = db.prepare('PRAGMA table_info(emails)').all();
    emailsInfo.forEach(col => {
        console.log(`${col.cid}: ${col.name} - ${col.type} ${col.notnull ? '(NOT NULL)' : ''} ${col.pk ? '(PRIMARY KEY)' : ''}`);
    });
    
    // Test d'une requ√™te simple
    console.log('\n=== Test de requ√™te ===');
    const sampleEmails = db.prepare('SELECT * FROM emails LIMIT 3').all();
    console.log(`‚úÖ ${sampleEmails.length} emails trouv√©s dans la base`);
    
    if (sampleEmails.length > 0) {
        console.log('\n=== Colonnes disponibles dans le premier email ===');
        console.log(Object.keys(sampleEmails[0]).join(', '));
    }
    
    db.close();
    console.log('\n‚úÖ V√©rification termin√©e avec succ√®s');
} catch (error) {
    console.error('‚ùå Erreur:', error.message);
}
