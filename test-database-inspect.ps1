# Test PowerShell pour v√©rifier le contenu de la base de donn√©es
# et examiner les recipient_email

$dbPath = "E:\Tanguy\Bureau\AutoMailMonitor\data\emails.db"

if (Test-Path $dbPath) {
    Write-Host "üîç Base de donn√©es trouv√©e: $dbPath" -ForegroundColor Green
    
    # Utiliser System.Data.SQLite pour lire la base
    try {
        Add-Type -Path "${env:PROGRAMFILES(X86)}\SQLite.NET\System.Data.SQLite.dll" -ErrorAction SilentlyContinue
    } catch {
        Write-Host "‚ö†Ô∏è  System.Data.SQLite non trouv√©, essai avec une autre approche..." -ForegroundColor Yellow
    }
    
    # Alternative : utiliser un simple script PowerShell avec sqlite3 en ligne de commande
    try {
        # V√©rifier d'abord le sch√©ma de la table emails
        Write-Host "`nüìã Sch√©ma de la table emails:" -ForegroundColor Cyan
        
        # Commande PowerShell pour lire le fichier SQLite (m√©thode basique)
        # Note: Ceci est une approche simple pour inspecter les donn√©es
        
        Write-Host "‚ö° Pour une inspection compl√®te, utilisez un outil comme DB Browser for SQLite" -ForegroundColor Yellow
        Write-Host "ou SQLiteStudio pour examiner manuellement:" -ForegroundColor Yellow
        Write-Host "- Chemin: $dbPath" -ForegroundColor White
        Write-Host "- Table: emails" -ForegroundColor White
        Write-Host "- Colonnes √† v√©rifier: recipient_email, sender_email, subject" -ForegroundColor White
        
        # Afficher la taille du fichier pour s'assurer qu'il contient des donn√©es
        $fileInfo = Get-Item $dbPath
        $sizeKB = [math]::Round($fileInfo.Length / 1024, 2)
        Write-Host "`nüìä Taille de la base: $sizeKB KB" -ForegroundColor Green
        
        if ($sizeKB -gt 100) {
            Write-Host "‚úÖ La base contient probablement des donn√©es (taille significative)" -ForegroundColor Green
        } else {
            Write-Host "‚ö†Ô∏è  Base de donn√©es relativement petite - peut contenir peu de donn√©es" -ForegroundColor Yellow
        }
        
        # Instructions pour v√©rification manuelle
        Write-Host "`nüîß Pour v√©rifier manuellement les corrections:" -ForegroundColor Cyan
        Write-Host "1. Ouvrez DB Browser for SQLite (https://sqlitebrowser.org/)" -ForegroundColor White
        Write-Host "2. Ouvrez le fichier: $dbPath" -ForegroundColor White
        Write-Host "3. Allez dans l'onglet 'Parcourir les donn√©es'" -ForegroundColor White
        Write-Host "4. S√©lectionnez la table 'emails'" -ForegroundColor White
        Write-Host "5. V√©rifiez si la colonne 'recipient_email' contient des donn√©es" -ForegroundColor White
        
        Write-Host "`nüìù Requ√™te SQL √† ex√©cuter dans DB Browser:" -ForegroundColor Cyan
        Write-Host "SELECT subject, sender_email, recipient_email, folder_name, created_at FROM emails ORDER BY created_at DESC LIMIT 10;" -ForegroundColor White
        
    } catch {
        Write-Host "‚ùå Erreur lors de l'inspection: $($_.Exception.Message)" -ForegroundColor Red
    }
    
} else {
    Write-Host "‚ùå Base de donn√©es non trouv√©e: $dbPath" -ForegroundColor Red
}

Write-Host "`nüéØ Prochaines √©tapes apr√®s v√©rification:" -ForegroundColor Cyan
Write-Host "1. Si recipient_email est vide pour tous les emails:" -ForegroundColor White
Write-Host "   - Les corrections sont en place mais les anciens emails n'ont pas de destinataires" -ForegroundColor White
Write-Host "   - Les nouveaux emails scann√©s apr√®s la correction devraient avoir des destinataires" -ForegroundColor White
Write-Host "2. Si recipient_email contient des donn√©es:" -ForegroundColor White
Write-Host "   - ‚úÖ Les corrections fonctionnent!" -ForegroundColor Green
Write-Host "3. Testez en ajoutant un nouveau dossier pour voir si les nouveaux emails" -ForegroundColor White
Write-Host "   incluent bien les destinataires" -ForegroundColor White
